pipeline {
    agent any

    environment {
        NETLIFY_AUTH_TOKEN = credentials('netlify-auth-token')
        NETLIFY_SITE_ID = credentials('netlify-site-id')
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    echo "üì• Checking out source code..."
                    checkout scm
                    sh 'ls -la'  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡∏ñ‡∏π‡∏Å‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß
                }
            }
        }

        stage('Install Dependencies') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üì¶ Installing dependencies..."
                    sh '''
                    npm install
                    npm install netlify-cli  # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Netlify CLI ‡πÉ‡∏ô Local Node Modules
                    npx netlify --version  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Netlify CLI ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
                    '''
                }
            }
        }

        stage('Build Project') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üèóÔ∏è Building the project..."
                    sh 'npm run build'
                }
            }
        }

        stage('Check Build Directory') {
            steps {
                script {
                    echo "üîç Checking if build directory exists..."
                    sh '''
                    if [ -d "dist" ]; then
                        echo "‚úÖ Build directory exists!"
                        ls -la dist/
                    else
                        echo "‚ùå Build directory missing! Build might have failed."
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Deploy to Netlify') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üöÄ Deploying to Netlify..."

                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Token ‡πÅ‡∏•‡∏∞ Site ID ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á
                    if (!NETLIFY_AUTH_TOKEN?.trim() || !NETLIFY_SITE_ID?.trim()) {
                        error "‚ùå NETLIFY_AUTH_TOKEN ‡∏´‡∏£‡∏∑‡∏≠ NETLIFY_SITE_ID ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤!"
                    }

                    sh '''
                    npx netlify deploy --prod --dir=dist \
                    --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID --json
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment Successful! üéâ"
        }
        failure {
            echo "‚ùå Deployment Failed! Check logs for details."
        }
    }
}
