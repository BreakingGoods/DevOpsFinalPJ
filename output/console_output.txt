Started by user Vanichaya Pansa-ard
Obtained Jenkinsfile from git https://github.com/NiceVani/TermProjectDevOps
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/TermProjectDevOps
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/TermProjectDevOps/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/NiceVani/TermProjectDevOps # timeout=10
Fetching upstream changes from https://github.com/NiceVani/TermProjectDevOps
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/NiceVani/TermProjectDevOps +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 0c9043a561dc793f56c2a8cf0b9bcb0b7620f7a4 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 0c9043a561dc793f56c2a8cf0b9bcb0b7620f7a4 # timeout=10
Commit message: "update delete"
 > git rev-list --no-walk a6d04454de58e51bd72fcb8d128141aa6779de11 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $NETLIFY_AUTH_TOKEN or $NETLIFY_SITE_ID
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2f739881d900880196660db3e9780350d4754fe324dfaf18cd918f7ad23e79f3
but /var/jenkins_home/workspace/TermProjectDevOps could not be found among []
but /var/jenkins_home/workspace/TermProjectDevOps@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/TermProjectDevOps -v /var/jenkins_home/workspace/TermProjectDevOps:/var/jenkins_home/workspace/TermProjectDevOps:rw,z -v /var/jenkins_home/workspace/TermProjectDevOps@tmp:/var/jenkins_home/workspace/TermProjectDevOps@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top ed757aad5d4fdc57bd8cd39a871b4546ac32a4230608fa06843b0d2bbbda38be -eo pid,comm
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] echo
🏗️ Building the project...
[Pipeline] sh
+ npm install

changed 1 package, and audited 3081 packages in 13s

455 packages are looking for funding
  run `npm fund` for details

16 vulnerabilities (10 moderate, 6 high)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
+ npx react-scripts build
Creating an optimized production build...
Compiled successfully.

File sizes after gzip:

  4.2 kB  build/static/js/main.c9b8463c.js
  131 B   build/static/css/main.59567c7b.css

The project was built assuming it is hosted at /.
You can control this with the homepage field in your package.json.

The build folder is ready to be deployed.
You may serve it with a static server:

  npm install -g serve
  serve -s build

Find out more about deployment here:

  https://cra.link/deployment

[Pipeline] }
[Pipeline] // script
[Pipeline] }
$ docker stop --time=1 ed757aad5d4fdc57bd8cd39a871b4546ac32a4230608fa06843b0d2bbbda38be
$ docker rm -f --volumes ed757aad5d4fdc57bd8cd39a871b4546ac32a4230608fa06843b0d2bbbda38be
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2f739881d900880196660db3e9780350d4754fe324dfaf18cd918f7ad23e79f3
but /var/jenkins_home/workspace/TermProjectDevOps could not be found among []
but /var/jenkins_home/workspace/TermProjectDevOps@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/TermProjectDevOps -v /var/jenkins_home/workspace/TermProjectDevOps:/var/jenkins_home/workspace/TermProjectDevOps:rw,z -v /var/jenkins_home/workspace/TermProjectDevOps@tmp:/var/jenkins_home/workspace/TermProjectDevOps@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top 827d8b43ee6e097aa920767d6b426e586151bd62610e6a0258e64e0b13d9aba2 -eo pid,comm
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] echo
🔬 Running tests...
[Pipeline] sh
+ npm test

> my-webapp@1.0.0 test
> jest

PASS src/App.test.js
  ✓ renders welcome message (31 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        1.416 s
Ran all test suites.
[Pipeline] }
[Pipeline] // script
[Pipeline] }
$ docker stop --time=1 827d8b43ee6e097aa920767d6b426e586151bd62610e6a0258e64e0b13d9aba2
$ docker rm -f --volumes 827d8b43ee6e097aa920767d6b426e586151bd62610e6a0258e64e0b13d9aba2
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to Netlify)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2f739881d900880196660db3e9780350d4754fe324dfaf18cd918f7ad23e79f3
but /var/jenkins_home/workspace/TermProjectDevOps could not be found among []
but /var/jenkins_home/workspace/TermProjectDevOps@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/TermProjectDevOps -v /var/jenkins_home/workspace/TermProjectDevOps:/var/jenkins_home/workspace/TermProjectDevOps:rw,z -v /var/jenkins_home/workspace/TermProjectDevOps@tmp:/var/jenkins_home/workspace/TermProjectDevOps@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top be078646cce465a507f39c01a42a885a48ba48d6f5e2570f538f41e94f6c47b7 -eo pid,comm
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] echo
🚀 Deploying to Netlify...
[Pipeline] sh
+ npx netlify deploy --prod '--dir=build' '--auth=****' '--site=****'
Deploy path:        /var/jenkins_home/workspace/TermProjectDevOps/build
Configuration path: /var/jenkins_home/workspace/TermProjectDevOps/netlify.toml
Deploying to main site URL...
[33m⠋[39m Uploading blobs to deploy store...

​
Netlify Build                                                 
────────────────────────────────────────────────────────────────
​
❯ Version
  @netlify/build 30.0.6
​
❯ Flags
  auth: ****
  deployId: 67e679831bfe4b5be5282cb3
  dir: build
  open: false
  prod: true
  prodIfUnlocked: false
  site: ****
  skipFunctionsCache: false
​
❯ Current directory
  /var/jenkins_home/workspace/TermProjectDevOps
​
❯ Config file
  /var/jenkins_home/workspace/TermProjectDevOps/netlify.toml
​
❯ Context
  dev
[33m⠙[39m Finished uploading blobs to deploy store
[33m⠋[39m Hashing files...
[33m⠋[39m Looking for a functions cache...
[33m⠙[39m No cached functions were found
[33m⠙[39m Finished hashing 
[33m⠋[39m CDN diffing files...
[33m⠙[39m CDN requesting 0 files
[33m⠋[39m Uploading 0 files
[33m⠙[39m Finished uploading 0 assets
[33m⠋[39m Waiting for deploy to go live...
[33m⠙[39m Deploy is live!

Build logs:         https://app.netlify.com/sites/nicevanitermproject/deploys/67e679831bfe4b5be5282cb3
Function logs:      https://app.netlify.com/sites/nicevanitermproject/logs/functions
Edge function Logs: https://app.netlify.com/sites/nicevanitermproject/logs/edge-functions
Unique deploy URL:  https://67e679831bfe4b5be5282cb3--nicevanitermproject.netlify.app
Website URL:        https://nicevanitermproject.netlify.app
[Pipeline] }
[Pipeline] // script
[Pipeline] }
$ docker stop --time=1 be078646cce465a507f39c01a42a885a48ba48d6f5e2570f538f41e94f6c47b7
$ docker rm -f --volumes be078646cce465a507f39c01a42a885a48ba48d6f5e2570f538f41e94f6c47b7
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post Deploy)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
📝 Post deploy actions
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
✅ Deployment Successful! 🎉
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
